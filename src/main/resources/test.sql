create table person
(
    id    int8,
    name  varchar,
    email varchar,
    age   int2
)

insert into person (id, name, email, age)
values (1, 'Viktor', 'viktor@mail.ru', 33)

drop table person

create table car
(
    id                 int8,
    name               varchar,
    year_of_production int2
)

insert into car(id, name, year_of_production)
values (1, 'Toyota', 2010)

drop table car

create table bike
(
    id           int8,
    name         varchar,
    engine_value double precision,
    year         int8
)

insert into bike (id, name, engine_value, year)
values (1, 'Java', 0.5, 2000);

drop table bike

create table flower
(
    id             int8,
    name           varchar,
    height         double precision,
    count_of_leafs int2
)

insert into flower (id, name, height, count_of_leafs)
VALUES (1, 'POdsolnukh', 1.5, 250)

drop table flower

create table animals
(
    id          int8,
    name        varchar,
    tale_lenght int2
)

insert into animals (id, name, tale_lenght)
values (5, 'Cat', 40);

insert into animals (id, name, tale_lenght)
values (1, 'Dog', 50);

insert into animals (id, name, tale_lenght)
values (2, 'Cow', 50);

insert into animals (id, name, tale_lenght)
values (3, 'Monkey', 20);

select *
from animals
where tale_lenght = 50

update animals
set name = 'Senbernar'
where name = 'Dog'

delete
from animals
where name = 'Cat';

update animals
set name = 'Long tale'
where tale_lenght = 40

update animals
set tale_lenght = 80
where name = 'Long tale';

delete
from animals
where name = 'Senbernar'

delete
from animals
where tale_lenght = 80

drop table animals

select *
from person;

select *
from person
where id = 3

update person
set name  = '',
    age   = 255,
    email = ''
where id = 1;

delete
from person
where id = 1;


--sergey@mail.ru'; drop table person; --


select *
from person
where email = 'sergey@mail.ru';
drop table person;
--'


create table director
(
    director_id int8 generated by default as identity primary key, -- not null unique
    name        varchar(100) not null unique,
    age         int4 check ( age > 20 )
)

insert into director(name, age)
VALUES ('Tarantino', 63);
INSERT INTO Director(name, age)
VALUES ('Martin Scorsese', 78);
INSERT INTO Director(name, age)
VALUES ('Guy Ritchie', 52);
INSERT INTO Director(name, age)
VALUES ('Woody Allen', 85);
INSERT INTO Director(name, age)
VALUES ('David Lynch', 74);
INSERT INTO Director(name, age)
VALUES ('Christopher Nolan', 50);

create table movie
(
    movie_id           int8 generated by default as identity primary key,
    director_id        int8         not null references director (director_id),
    name               varchar(300) not null unique,
    year_of_production int check (year_of_production > 1893)
)

INSERT INTO Movie(director_id, name, year_of_production)
VALUES (1, 'Reservoir Dogs', 1992);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (1, 'Pulp Fiction', 1994);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (1, 'The Hateful Eight', 2015);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (1, 'Once Upon a Time in Hollywood', 2019);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (2, 'Taxi Driver', 1976);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (2, 'Goodfellas', 1990);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (2, 'The Wolf of Wall Street', 2013);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (3, 'Lock, Stock and Two Smoking Barrels', 1998);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (3, 'Snatch', 2000);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (4, 'Midnight in Paris', 2011);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (6, 'Inception', 2010);



select *
from director
         left join movie on director.director_id = movie.director_id

select director.name, movie.name
from director
         join movie on director.director_id = movie.director_id

-- name, age, name, year_of_production

select director.name, director.age, movie.name, movie.year_of_production
from director
         join movie on director.director_id = movie.director_id

select d.name, m.name
from director d
         left join movie m on d.director_id = m.director_id
where m.year_of_production > 2000

create table citizen
(
    citizen_id int8 generated by default as identity primary key,
    name       varchar(50) not null,
    age        int check ( age > 0 )
)

create table passport
(
    citizen_id      int8 primary key references citizen (citizen_id),
    passport_number int8
)

INSERT INTO Citizen(name, age)
VALUES ('Bob', 12);
INSERT INTO Citizen(name, age)
VALUES ('Tom', 24);
INSERT INTO Citizen(name, age)
VALUES ('Katy', 39);
INSERT INTO Citizen(name, age)
VALUES ('Alice', 45);

INSERT INTO Passport(citizen_id, passport_number)
VALUES (1, 12345);
INSERT INTO Passport(citizen_id, passport_number)
VALUES (2, 75124);
INSERT INTO Passport(citizen_id, passport_number)
VALUES (3, 91245);
INSERT INTO Passport(citizen_id, passport_number)
VALUES (4, 19259);

select *
from citizen
         join passport on citizen.citizen_id = passport.citizen_id
where citizen.age > 20

create table actor
(
    actor_id int8 generated by default as identity primary key,
    name     varchar(100) not null unique,
    age      int check ( age > 0 )
)


INSERT INTO Actor(name, age)
VALUES ('Harvey Keitel', 81);
INSERT INTO Actor(name, age)
VALUES ('Robert De Niro', 77);
INSERT INTO Actor(name, age)
VALUES ('Leonardo DiCaprio', 46);
INSERT INTO Actor(name, age)
VALUES ('Jason Statham', 53);
INSERT INTO Actor(name, age)
VALUES ('Joe Pesci', 77);
INSERT INTO Actor(name, age)
VALUES ('Samuel L. Jackson', 72);

create table actor_movie
(
    actor_id int8 references actor (actor_id),
    movie_id int8 references movie (movie_id),
    primary key (actor_id, movie_id)
)

INSERT INTO Actor_Movie
VALUES (1, 1);
INSERT INTO Actor_Movie
VALUES (1, 2);
INSERT INTO Actor_Movie
VALUES (2, 5);
INSERT INTO Actor_Movie
VALUES (2, 6);
INSERT INTO Actor_Movie
VALUES (3, 4);
INSERT INTO Actor_Movie
VALUES (3, 7);
INSERT INTO Actor_Movie
VALUES (3, 11);
INSERT INTO Actor_Movie
VALUES (4, 8);
INSERT INTO Actor_Movie
VALUES (4, 9);
INSERT INTO Actor_Movie
VALUES (5, 6);
INSERT INTO Actor_Movie
VALUES (6, 2);
INSERT INTO Actor_Movie
VALUES (6, 3);

select *
from actor
         join actor_movie on actor.actor_id = actor_movie.actor_id
         join movie on movie.movie_id = actor_movie.movie_id

-- name, name, year_of_prod

select actor.name, movie.name, movie.year_of_production
from actor
         join actor_movie on actor.actor_id = actor_movie.actor_id
         join movie on movie.movie_id = actor_movie.movie_id

-- actor.name, movie.name, year_of_prod, director.name

select actor.name, movie.name, actor.age, movie.year_of_production
from actor
         join actor_movie on actor.actor_id = actor_movie.actor_id
         join movie on movie.movie_id = actor_movie.movie_id

select a.name, m.name, m.year_of_production, d.name
from director d
         join movie m on m.director_id = d.director_id
         join actor_movie am on m.movie_id = am.movie_id
         join actor a on a.actor_id = am.actor_id

drop table person

drop table item

create table person
(
    id    int8 generated by default as identity primary key ,
    name  varchar not null,
    email varchar unique ,
    age   int2
)

insert into person (name, email, age)
values ('Viktor', 'viktor@mail.ru', 33)

create table item
(
    item_id   int generated by default as identity primary key,
    item_name varchar,
    person_id int8 references person (id)
)

delete from person where id = 1

insert into item (item_name, person_id)
values ('TV', 4)

insert into item (item_name, person_id)
values ('PC', 4)

insert into item (item_name, person_id)
values ('XBOX', 4)
